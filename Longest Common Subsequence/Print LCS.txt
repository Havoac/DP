/* Print Longest Common Sub-Sequence */
/* https://www.geeksforgeeks.org/printing-longest-common-subsequence/ */

/* DP : (TC : m*n)*/
#include<bits/stdc++.h>
using namespace std;

string print_longest_common_subsequence(string s1, int n, string s2, int m){
    int dp[n+1][m+1];
    
    string s="";
    
    for(int i=0 ; i<=n ; i++){
        for(int j=0 ; j<=m ; j++){
            if(i==0 || j==0)
            dp[i][j]=0;
            else{
                if(s1[i-1]==s2[j-1])
                dp[i][j]=1+max(dp[i-1][j], dp[i][j-1]);
                else
                dp[i][j]=max(dp[i-1][j], dp[i][j-1]);
            }
        }
    }
    
    int i=n, j=m;
    
    while(i>0 && j>0){
        if(s1[i-1]==s2[j-1]){
            s=s+s1[i-1];
            i--;
            j--;
        }
        else{
            if(dp[i-1][j]>dp[i][j-1])
            i--;
            else
            j--;
        }
    }
    
    reverse(s.begin(), s.end());
    return s;
}

int main()
{
    cout<<"Enter first string (X) : ";
    string X;
    cin>>X;
    cout<<"Enter second string (Y) : ";
    string Y;
    cin>>Y;

    cout<<"Longest Common Sub-Sequence is : "<<print_longest_common_subsequence(X, X.length(), Y, Y.length())<<endl;
    return 0;
}