/* Perfect Sum Problem */
/* https://www.geeksforgeeks.org/perfect-sum-problem/ */


/* Method 1 : Recursion(TC : 2^n) */
#include<bits/stdc++.h>
using namespace std;

int perfectSum(int arr[], int n, int sum)
{
    if(n==0){
	    if(sum==0)
	        return 1;
	    else
	        return 0;
	}
	return perfectSum(arr, n-1, sum)+perfectSum(arr, n-1, sum-arr[n-1]);
}

int main(){
    int n, sum;
    cout<<"Enter Size : ";
    cin>>n;
    
    int arr[n];
    cout<<"Enter Array Elements : ";
    for(int i=0 ; i<n ; i++)
    cin>>arr[i];
    
    cout<<"Enter the Sum value : ";
    cin>>sum;
    
    cout<<"Total No. of Subsets Possible : "<<perfectSum(arr, n, sum);
    return 0;
}



/* Method 2 : DP(TC : n^2) */
#include<bits/stdc++.h>
using namespace std;

int perfectSum(int arr[], int n, int sum)
	{
	    int dp[n+1][sum+1];
	    
	    for(int i=0 ; i<=n ; i++){
	        for(int j=0 ; j<=sum ; j++){
	            if(j==0)
	            dp[i][j]=1;
	            else if(i==0)
	            dp[i][j]=0;
	            else{
	                if(arr[i-1]>j)
	                dp[i][j]=dp[i-1][j];
	                else
	                dp[i][j]=dp[i-1][j] + dp[i-1][j-arr[i-1]];
	            }
	        }
	    }
	    
	    return dp[n][sum];
	}

int main(){
    int n, sum;
    cout<<"Enter Size : ";
    cin>>n;
    
    int arr[n];
    cout<<"Enter Array Elements : ";
    for(int i=0 ; i<n ; i++)
    cin>>arr[i];
    
    cout<<"Enter the Sum value : ";
    cin>>sum;
    
    cout<<"Total No. of Subsets Possible : "<<perfectSum(arr, n, sum);
    return 0;
}