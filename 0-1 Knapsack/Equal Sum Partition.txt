/* Equal Sum Partition */
/* https://www.geeksforgeeks.org/partition-problem-dp-18/ */


/* Method 1 : Recursion(TC : 2^n) */

#include<bits/stdc++.h>
using namespace std;

bool check(int nums[], int n, int sum){
    if(n==0)
        return false;
        
    if(sum==0)
        return true;
        
    if(nums[n-1]>sum)
        return check(nums, n-1, sum);
    else
        return check(nums, n-1, sum) || check(nums, n-1, sum-nums[n-1]);
}

int main(){
    int n;
    cout<<"Enter Size : ";
    cin>>n;
    
    int arr[n], sum=0;
    cout<<"Enter Array Elements : ";
    for(int i=0 ; i<n ; i++){
        cin>>arr[i];
        sum=sum+arr[i];
    }
    
    if(sum%2!=0)
    cout<<"No, It is Not Possible";
    else{
        if(check(arr, n, sum/2))
        cout<<"Yes, It is Possible";
        else
        cout<<"No, It is Not Possible";
    }
    return 0;
}



/* Method 2 : DP(TC : n^2) */

#include<bits/stdc++.h>
using namespace std;

bool check(int arr[], int N, int sum){
    bool dp[N+1][sum+1];
        
    for(int i=0 ; i<=N ; i++){
        for(int j=0 ; j<=sum ; j++){
            if(j==0)
                dp[i][j]=true;
            else if(i==0)
                dp[i][j]=false;
            else{
                if(arr[i-1]>j)
                    dp[i][j]=dp[i-1][j];
                else
                    dp[i][j]=dp[i-1][j]||dp[i-1][j-arr[i-1]];
            }
        }
    }
    return dp[N][sum];
}

int main(){
    int n;
    cout<<"Enter Size : ";
    cin>>n;
    
    int arr[n], sum=0;
    cout<<"Enter Array Elements : ";
    for(int i=0 ; i<n ; i++){
        cin>>arr[i];
        sum=sum+arr[i];
    }
    
    if(sum%2!=0)
    cout<<"No, It is Not Possible";
    else{
        if(check(arr, n, sum/2))
        cout<<"Yes, It is Possible";
        else
        cout<<"No, It is Not Possible";
    }
    return 0;
}