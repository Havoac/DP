/* Count of subsets with sum equal to X */
/* https://www.geeksforgeeks.org/count-of-subsets-with-sum-equal-to-x-using-recursion/?ref=lbp */


/* Method 1 : Recursion(TC : 2^n) */

#include<bits/stdc++.h>
using namespace std;

int Count_Subset_Sum(int arr[], int sum, int n){
    if(n==0){
        if(sum==0)
        return 1;
        else
        return 0;
    }
    
    return Count_Subset_Sum(arr, sum, n-1) + Count_Subset_Sum(arr, sum-arr[n-1], n-1);
}

int main(){
    int n, sum;
    cout<<"Enter Size : ";
    cin>>n;
    
    int arr[n];
    cout<<"Enter Array Elements : ";
    for(int i=0 ; i<n ; i++)
    cin>>arr[i];
    
    cout<<"Enter the Sum value : ";
    cin>>sum;
    
    cout<<"Count of Subset Sum : "<<Count_Subset_Sum(arr, sum, n);
    return 0;
}


/* Method 2 : DP(TC : n^2) */
/* https://www.geeksforgeeks.org/count-of-subsets-with-sum-equal-to-x/ */

#include<bits/stdc++.h>
using namespace std;

int Count_Subset_Sum(int arr[], int sum, int n){
    int dp[n+1][sum+1];
    
    for(int i=0 ; i<=n ; i++){
        for(int j=0 ; j<=sum ; j++){
            if(j==0)
            dp[i][j]=1;
            else if(i==0)
            dp[i][j]=0;
            else
            dp[i][j]=dp[i-1][j]+dp[i-1][j-arr[i-1]];
        }
    }
    
    return dp[n][sum];
}

int main(){
    int n, sum;
    cout<<"Enter Size : ";
    cin>>n;
    
    int arr[n];
    cout<<"Enter Array Elements : ";
    for(int i=0 ; i<n ; i++)
    cin>>arr[i];
    
    cout<<"Enter the Sum value : ";
    cin>>sum;
    
    cout<<"Count of Subset Sum : "<<Count_Subset_Sum(arr, sum, n);
    return 0;
}